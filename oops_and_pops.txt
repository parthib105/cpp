 1. As the size of program increases, redeability, maintainability and bug-free
    nature of program decreases.
 2. This was the major problem with languages like C which relied
    upon functions or procedures (hence the name procedural programming
    language)
 3. As a result, the possibility of not addressing the problem in an effective
    manner was high.
 4. Also, as the data was almost neglected, data security was easily compromised.
 5. Using classes solves this problem by moidelling program as a rela world scenario. 


Procedure Oriented Programming: 
 1. Consists of writing a set of instructions for the computer to follow
 2. Main focus is on functions and not on flow of data
 3. Functions can either use local or gobal data
 4. Data moves openly from function to function


Object Oriented Programming:
 1. Works on the concept of classes and objects
 2. A class is a template to create objects
 3. Treats data as critical element
 4. Decomposes the problem in objects and builds sata and functions
    around the objects. 


Basic concepts in OOP:
 1. Classes - basic template for creating objects
 2. Objects - Basic run time entities
 3. Data Abstruction & Encapsulation - Wrapting data and functions
    into single unit.
 4. Inheritance - Properties of one class can be inherited into others
 5. Polymorphism - ability to take more than one forms
 6. Dynamic Binding - code which will execute is not known until the program
 7. Message Passing - Object.message(Information) call format


Benifits of OOP:
 1. Better code reusability using objects and Inheritance
 2. Principal of data hiding helps build secure systems
 3. Multiple objects can co-exist  without any interference
 4. Software complexity can be easily managed